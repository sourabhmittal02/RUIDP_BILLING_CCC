@model ComplaintTracker.Models.ModelUser

@section scripts{

}


@using (Html.BeginForm("ChangePassword", "GetUsers", FormMethod.Post))
{

    <div class="modal fade" id="remarkChangePassword" tabindex="-1" aria-hidden="true" style="display: none;" data-bs-backdrop="static" data-bs-keyboard="false">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header with-border bg-primary text-white">
                    <h2 class="modal-title">Change Password</h2>
                    <button data-bs-dismiss="modal" aria-label="Close" class="btn-close"><span>&times;</span> </button>
                </div>
                <div class="modal-body">
                    <div class="row mb-3">
                        <div class="col-md-12">
                            <div class="form-floating">
                                @*@Html.EditorFor(model => model.User_Name, new { htmlAttributes = new { placeholder = "User Name", @class = "form-control", @disabled = "disabled" } })*@
                                <input type="text" class="form-control" name="txtuserName" id="txtuserName" value="@ViewBag.User_Name" placeholder="User Name" disabled />
                                <label for="User_Name">User Name</label>


                            </div>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-12">
                            <div class="form-floating">
                                @*@Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", type = "password" } })*@
                                <input type="password" class="form-control" name="Password" id="Password" value="" placeholder="Password" />
                                <label for="Password">Password</label>
                                @*@Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })*@
                            </div>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-12">
                            <div class="form-floating">
                                @*@Html.EditorFor(model => model.Confirm_Password, new { htmlAttributes = new { @class = "form-control", type = "password" } })*@
                                <input type="password" class="form-control" name="Confirm_Password" id="Confirm_Password" value="" placeholder="Confirm Password" />
                                <label for="Confirm_Password">Confirm Password</label>
                                @*@Html.ValidationMessageFor(model => model.Confirm_Password, "", new { @class = "text-danger" })*@
                            </div>
                        </div>
                    </div>
                    @Html.HiddenFor(x => x.User_Name)
                    @Html.HiddenFor(x => x.Password)
                    @Html.HiddenFor(x => x.Confirm_Password)
                </div>
                <div class="modal-footer with-border">
                    <button type="submit" class="btn btn-success" id="btnUpdate">Save</button>
                    <button type="button" class="btn btn-danger" data-bs-dismiss="modal" aria-label="Close">Close</button>
                </div>
            </div>
        </div>
    </div>
}

    <script type="text/javascript">
             var MyAppUrlSettings = {
                                IndexUrl: '@Url.Action("ChangePassword", "GetUsers")'
                }
    $('form').submit(function (e) {
            e.preventDefault();
        $.post(this.action, $(this).serialize(), function (response) {
            if (response == 'success') {
                alert('Password Changed.');
                    //window.location.href = MyAppUrlSettings.IndexUrl;
            
                $('#remarkChangePassword').modal('hide');
                
                }
             }, 'json');
        });
    </script>
